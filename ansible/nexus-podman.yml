- name: Stop any existing Nexus service
  ansible.builtin.systemd:
    name: container-nexus
    state: stopped
  register: sysd
  ignore_errors: true
- name: Build Nexus3 OCI Image
  containers.podman.podman_image:
    name: nexus
    force: true
    path: "{{ container.path }}"
    build:
      cache: false
      force_rm: true
      format: oci
      file: "{{ container.dockerfile }}"
      extra_args: >-
        --pull --no-cache
        --build-arg TAG_VERSION={{ container.tag }}
      annotation:
        app: nexus
        function: artifactory for various artifacts
        info: Provides artifactory storage and proxy of artifact repositories
- name: Adding some folders for binding
  ansible.builtin.file:
    path: "{{ nxspath }}"
    state: directory
    owner: 200
    group: 200
    mode: '0755'
  loop:
    - /opt/nexus
    - /opt/nexus/etc
    - /opt/nexus/etc/ssl
  loop_control:
    loop_var: nxspath
- name: Adding SSL Application Port
  community.general.ini_file:
    path: "/opt/nexus/etc/nexus.properties"
    section:
    no_extra_spaces: true
    option: "{{ ssl_setting['name'] }}"
    value: "{{ ssl_setting['value'] }}"
    mode: '0644'
  loop:
    - name: application-port-ssl
      value: 8443
    - name: nexus-args
      value: "${jetty.etc}/jetty.xml,${jetty.etc}/jetty-https.xml,${jetty.etc}/jetty-requestlog.xml"
    - name: "ssl.etc"
      value: "${karaf.data}/etc/ssl"
  loop_control:
    loop_var: ssl_setting
- name: Setup the VM options
  ansible.builtin.template:
    src: "templates/nexus.vmoptions.j2"
    dest: /opt/nexus/nexus.vmoptions
    mode: '0644'
- name: Create the sysconfig file
  ansible.builtin.template:
    src: "templates/sysconfig/nexus.j2"
    dest: /etc/sysconfig/nexus
    mode: '0644'
- name: Add cron script
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/files/renewcert"
    dest: /etc/cron.daily/renewcert
    mode: "0755"
- name: Run the renewcert
  ansible.builtin.command: /etc/cron.daily/renewcert
  register: cmd
  changed_when:
    - "'Regenerating' in cmd.stdout"
- name: Set the permissions on the JKS
  ansible.builtin.file:
    path: /opt/nexus/etc/ssl/keystore.jks
    owner: 200
    group: 200
- name: Adding deploy folder for plugins
  ansible.builtin.file:
    path: /opt/nexus-deploy
    state: "{{ nxdeploy_state }}"
    owner: root
    group: root
    mode: '0755'
  loop:
    - absent
    - directory
  loop_control:
    loop_var: nxdeploy_state
- name: Get the tags for Nexus composer plugin
  ansible.builtin.uri:
    url: https://api.github.com/repos/sonatype-nexus-community/nexus-repository-composer/tags
    return_content: true
    validate_certs: false
  register: _composer_tags
- name: Get the tags for Nexus Ansible Galaxy plugin
  ansible.builtin.uri:
    url: https://api.github.com/repos/l3ender/nexus-repository-ansiblegalaxy/tags
    return_content: true
    validate_certs: false
  register: _ansiblegalaxy_tags
- name: Get the tags for Nexus cpan plugin
  ansible.builtin.uri:
    url: https://api.github.com/repos/sonatype-nexus-community/nexus-repository-cpan/tags
    return_content: true
    validate_certs: false
  register: _cpan_tags
- name: Get the plugins
  ansible.builtin.get_url:
    url: "{{ plugin_url }}"
    dest: "/opt/nexus-deploy/{{ plugin_url | basename }}"
    mode: "0644"
    validate_certs: false
  loop:
    - "https://repo1.maven.org/maven2/org/sonatype/nexus/plugins/nexus-repository-composer/\
        {{ composer_plugin_version }}/nexus-repository-composer-{{ composer_plugin_version }}-bundle.kar"
    - "https://repo1.maven.org/maven2/org/sonatype/nexus/plugins/nexus-repository-cpan-it/\
        {{ cpan_plugin_version }}/nexus-repository-cpan-it-{{ cpan_plugin_version }}.jar"
    - "https://github.com/l3ender/nexus-repository-ansiblegalaxy/releases/download/\
        {{ ansible_galaxy_plugin_version }}/nexus-repository-ansiblegalaxy-{{ ansible_galaxy_plugin_version }}-bundle.kar"
  loop_control:
    loop_var: plugin_url
  vars:
    composer_plugin_version: "{{ _composer_tags.json | map(attribute='name') | flatten | list | first | split('composer-parent-') | last }}"
    cpan_plugin_version: "{{ _cpan_tags.json | map(attribute='name') | flatten | list | first | split('cpan-parent-') | last }}"
    ansible_galaxy_plugin_version: "{{ _ansiblegalaxy_tags.json | map(attribute='name') | flatten | list | first }}"
- name: Re-create nexus container with systemd service file generated
  containers.podman.podman_container:
    name: nexus
    image: localhost/nexus
    state: started
    recreate: true
    privileged: true
    hostname: "{{ container.hostname }}"
    cap_add:
      - ALL
    stop_timeout: 3600
    log_driver: journald
    log_opt:
      tag: nexus
      max_size: 10mb
    ports:
      - "443:8443"
      - "5443:5443"
      - "5444:5444"
      - "5445:5445"
      - "5446:5446"
      - "5447:5447"
    expose:
      - "8443"
      - "5443"
      - "5444"
      - "5445"
      - "5446"
      - "5447"
    env:
      INSTALL4J_ADD_VM_PARAMS: >-
        -Xms16384m -Xmx16384m
        -XX:MaxDirectMemorySize=16384m
        -Djava.util.prefs.userRoot=/nexus-data/javaprefs
        -Djavax.net.ssl.keyStore=/nexus-data/etc/ssl/keystore.jks
        -Djavax.net.ssl.keyStorePassword=password
    volumes:
      - /opt/nexus:/nexus-data:Z
      - /opt/nexus-deploy:/opt/sonatype/nexus/deploy:Z
    generate_systemd:
      path: /etc/systemd/system/
      restart_policy: always
      time: 120
      names: true
- name: Reload systemd daemon
  ansible.builtin.systemd:
    daemon_reload: true
- name: Restart the service
  ansible.builtin.systemd:
    name: container-nexus
    state: restarted
